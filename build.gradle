apply plugin: 'java'
apply plugin: 'idea'
apply plugin: "kotlin"
apply plugin: 'application'
apply plugin: 'antlr'
apply plugin: "me.champeau.gradle.jmh"

buildscript {
    ext.kotlin_version = "1.3.21"

    repositories {
        jcenter()
        maven {
            url "https://plugins.gradle.org/m2/"
        }
    }

    dependencies {
        classpath "org.jetbrains.kotlin:kotlin-gradle-plugin:$kotlin_version"
        classpath group: 'me.champeau.gradle', name: 'jmh-gradle-plugin', version: '0.4.8'
    }
}

repositories {
    jcenter()
    maven {
        url 'https://www.h31.ishere.ru/ModelParser'
    }
}

dependencies {
    compile "org.jetbrains.kotlin:kotlin-stdlib-jdk8:$kotlin_version"
    compile "org.jetbrains.kotlin:kotlin-reflect:$kotlin_version"
    compile 'ch.qos.logback:logback-classic:1.2.3'
    compile 'io.github.microutils:kotlin-logging:1.4.6'
    compile 'com.xenomachina:kotlin-argparser:2.0.3'
    compile "org.antlr:antlr4:4.7"
    compile 'com.fasterxml.jackson.core:jackson-databind:2.9.5'
    compile 'com.fasterxml.jackson.module:jackson-module-kotlin:2.9.5'
    compile 'com.github.javaparser:javaparser-core:3.6.9'
    compile 'ru.spbstu.kspt.librarymigration:modelparser:0.4-SNAPSHOT'
    compile 'io.javalin:javalin:2.5.0'
    compile group: 'com.github.jnr', name: 'jnr-unixsocket', version: '0.20'
    compile group: 'org.antlr', name: 'ST4', version: '4.1'
    testCompile 'junit:junit:4.12'
}

idea {
    module {
        downloadJavadoc = true
        downloadSources = true
    }
}

test {
    testLogging {
        events "started", "skipped", "failed"
        exceptionFormat "full"
    }
}

compileJava {
    sourceCompatibility = '1.8'
}

generateGrammarSource {
    maxHeapSize = "64m"
    arguments += ["-visitor", "-long-messages"]
}

mainClassName = "ru.spbstu.kspt.librarymigration.MainKt"

//test.maxParallelForks = Runtime.runtime.availableProcessors().intdiv(2) ?: 1