// Generated by the protocol buffer compiler.  DO NOT EDIT!
// source: exchange.proto

#ifndef PROTOBUF_INCLUDED_exchange_2eproto
#define PROTOBUF_INCLUDED_exchange_2eproto

#include <string>

#include <google/protobuf/stubs/common.h>

#if GOOGLE_PROTOBUF_VERSION < 3006001
#error This file was generated by a newer version of protoc which is
#error incompatible with your Protocol Buffer headers.  Please update
#error your headers.
#endif
#if 3006001 < GOOGLE_PROTOBUF_MIN_PROTOC_VERSION
#error This file was generated by an older version of protoc which is
#error incompatible with your Protocol Buffer headers.  Please
#error regenerate this file with a newer version of protoc.
#endif

#include <google/protobuf/io/coded_stream.h>
#include <google/protobuf/arena.h>
#include <google/protobuf/arenastring.h>
#include <google/protobuf/generated_message_table_driven.h>
#include <google/protobuf/generated_message_util.h>
#include <google/protobuf/inlined_string_field.h>
#include <google/protobuf/metadata.h>
#include <google/protobuf/message.h>
#include <google/protobuf/repeated_field.h>  // IWYU pragma: export
#include <google/protobuf/extension_set.h>  // IWYU pragma: export
#include <google/protobuf/generated_enum_reflection.h>
#include <google/protobuf/unknown_field_set.h>
// @@protoc_insertion_point(includes)
#define PROTOBUF_INTERNAL_EXPORT_protobuf_exchange_2eproto 

namespace protobuf_exchange_2eproto {
// Internal implementation detail -- do not use these members.
struct TableStruct {
  static const ::google::protobuf::internal::ParseTableField entries[];
  static const ::google::protobuf::internal::AuxillaryParseTableField aux[];
  static const ::google::protobuf::internal::ParseTable schema[6];
  static const ::google::protobuf::internal::FieldMetadata field_metadata[];
  static const ::google::protobuf::internal::SerializationTable serialization_table[];
  static const ::google::protobuf::uint32 offsets[];
};
void AddDescriptors();
}  // namespace protobuf_exchange_2eproto
namespace exchange {
class Argument;
class ArgumentDefaultTypeInternal;
extern ArgumentDefaultTypeInternal _Argument_default_instance_;
class ChannelResponse;
class ChannelResponseDefaultTypeInternal;
extern ChannelResponseDefaultTypeInternal _ChannelResponse_default_instance_;
class ConstructorRequest;
class ConstructorRequestDefaultTypeInternal;
extern ConstructorRequestDefaultTypeInternal _ConstructorRequest_default_instance_;
class ImportRequest;
class ImportRequestDefaultTypeInternal;
extern ImportRequestDefaultTypeInternal _ImportRequest_default_instance_;
class MethodCallRequest;
class MethodCallRequestDefaultTypeInternal;
extern MethodCallRequestDefaultTypeInternal _MethodCallRequest_default_instance_;
class Request;
class RequestDefaultTypeInternal;
extern RequestDefaultTypeInternal _Request_default_instance_;
}  // namespace exchange
namespace google {
namespace protobuf {
template<> ::exchange::Argument* Arena::CreateMaybeMessage<::exchange::Argument>(Arena*);
template<> ::exchange::ChannelResponse* Arena::CreateMaybeMessage<::exchange::ChannelResponse>(Arena*);
template<> ::exchange::ConstructorRequest* Arena::CreateMaybeMessage<::exchange::ConstructorRequest>(Arena*);
template<> ::exchange::ImportRequest* Arena::CreateMaybeMessage<::exchange::ImportRequest>(Arena*);
template<> ::exchange::MethodCallRequest* Arena::CreateMaybeMessage<::exchange::MethodCallRequest>(Arena*);
template<> ::exchange::Request* Arena::CreateMaybeMessage<::exchange::Request>(Arena*);
}  // namespace protobuf
}  // namespace google
namespace exchange {

enum Argument_ArgumentType {
  Argument_ArgumentType_PERSISTENCE = 0,
  Argument_ArgumentType_INPLACE = 1,
  Argument_ArgumentType_Argument_ArgumentType_INT_MIN_SENTINEL_DO_NOT_USE_ = ::google::protobuf::kint32min,
  Argument_ArgumentType_Argument_ArgumentType_INT_MAX_SENTINEL_DO_NOT_USE_ = ::google::protobuf::kint32max
};
bool Argument_ArgumentType_IsValid(int value);
const Argument_ArgumentType Argument_ArgumentType_ArgumentType_MIN = Argument_ArgumentType_PERSISTENCE;
const Argument_ArgumentType Argument_ArgumentType_ArgumentType_MAX = Argument_ArgumentType_INPLACE;
const int Argument_ArgumentType_ArgumentType_ARRAYSIZE = Argument_ArgumentType_ArgumentType_MAX + 1;

const ::google::protobuf::EnumDescriptor* Argument_ArgumentType_descriptor();
inline const ::std::string& Argument_ArgumentType_Name(Argument_ArgumentType value) {
  return ::google::protobuf::internal::NameOfEnum(
    Argument_ArgumentType_descriptor(), value);
}
inline bool Argument_ArgumentType_Parse(
    const ::std::string& name, Argument_ArgumentType* value) {
  return ::google::protobuf::internal::ParseNamedEnum<Argument_ArgumentType>(
    Argument_ArgumentType_descriptor(), name, value);
}
// ===================================================================

class Request : public ::google::protobuf::Message /* @@protoc_insertion_point(class_definition:exchange.Request) */ {
 public:
  Request();
  virtual ~Request();

  Request(const Request& from);

  inline Request& operator=(const Request& from) {
    CopyFrom(from);
    return *this;
  }
  #if LANG_CXX11
  Request(Request&& from) noexcept
    : Request() {
    *this = ::std::move(from);
  }

  inline Request& operator=(Request&& from) noexcept {
    if (GetArenaNoVirtual() == from.GetArenaNoVirtual()) {
      if (this != &from) InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }
  #endif
  static const ::google::protobuf::Descriptor* descriptor();
  static const Request& default_instance();

  enum RequestCase {
    kMethodCall = 1,
    kImportation = 2,
    kConstructor = 3,
    kEval = 4,
    kDynamicInherit = 5,
    REQUEST_NOT_SET = 0,
  };

  static void InitAsDefaultInstance();  // FOR INTERNAL USE ONLY
  static inline const Request* internal_default_instance() {
    return reinterpret_cast<const Request*>(
               &_Request_default_instance_);
  }
  static constexpr int kIndexInFileMessages =
    0;

  void Swap(Request* other);
  friend void swap(Request& a, Request& b) {
    a.Swap(&b);
  }

  // implements Message ----------------------------------------------

  inline Request* New() const final {
    return CreateMaybeMessage<Request>(NULL);
  }

  Request* New(::google::protobuf::Arena* arena) const final {
    return CreateMaybeMessage<Request>(arena);
  }
  void CopyFrom(const ::google::protobuf::Message& from) final;
  void MergeFrom(const ::google::protobuf::Message& from) final;
  void CopyFrom(const Request& from);
  void MergeFrom(const Request& from);
  void Clear() final;
  bool IsInitialized() const final;

  size_t ByteSizeLong() const final;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input) final;
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const final;
  ::google::protobuf::uint8* InternalSerializeWithCachedSizesToArray(
      bool deterministic, ::google::protobuf::uint8* target) const final;
  int GetCachedSize() const final { return _cached_size_.Get(); }

  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const final;
  void InternalSwap(Request* other);
  private:
  inline ::google::protobuf::Arena* GetArenaNoVirtual() const {
    return NULL;
  }
  inline void* MaybeArenaPtr() const {
    return NULL;
  }
  public:

  ::google::protobuf::Metadata GetMetadata() const final;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // string assignedID = 7;
  void clear_assignedid();
  static const int kAssignedIDFieldNumber = 7;
  const ::std::string& assignedid() const;
  void set_assignedid(const ::std::string& value);
  #if LANG_CXX11
  void set_assignedid(::std::string&& value);
  #endif
  void set_assignedid(const char* value);
  void set_assignedid(const char* value, size_t size);
  ::std::string* mutable_assignedid();
  ::std::string* release_assignedid();
  void set_allocated_assignedid(::std::string* assignedid);

  // .exchange.MethodCallRequest method_call = 1;
  bool has_method_call() const;
  void clear_method_call();
  static const int kMethodCallFieldNumber = 1;
  private:
  const ::exchange::MethodCallRequest& _internal_method_call() const;
  public:
  const ::exchange::MethodCallRequest& method_call() const;
  ::exchange::MethodCallRequest* release_method_call();
  ::exchange::MethodCallRequest* mutable_method_call();
  void set_allocated_method_call(::exchange::MethodCallRequest* method_call);

  // .exchange.ImportRequest importation = 2;
  bool has_importation() const;
  void clear_importation();
  static const int kImportationFieldNumber = 2;
  private:
  const ::exchange::ImportRequest& _internal_importation() const;
  public:
  const ::exchange::ImportRequest& importation() const;
  ::exchange::ImportRequest* release_importation();
  ::exchange::ImportRequest* mutable_importation();
  void set_allocated_importation(::exchange::ImportRequest* importation);

  // .exchange.ConstructorRequest constructor = 3;
  bool has_constructor() const;
  void clear_constructor();
  static const int kConstructorFieldNumber = 3;
  private:
  const ::exchange::ConstructorRequest& _internal_constructor() const;
  public:
  const ::exchange::ConstructorRequest& constructor() const;
  ::exchange::ConstructorRequest* release_constructor();
  ::exchange::ConstructorRequest* mutable_constructor();
  void set_allocated_constructor(::exchange::ConstructorRequest* constructor);

  // bool eval = 4;
  private:
  bool has_eval() const;
  public:
  void clear_eval();
  static const int kEvalFieldNumber = 4;
  bool eval() const;
  void set_eval(bool value);

  // bool dynamic_inherit = 5;
  private:
  bool has_dynamic_inherit() const;
  public:
  void clear_dynamic_inherit();
  static const int kDynamicInheritFieldNumber = 5;
  bool dynamic_inherit() const;
  void set_dynamic_inherit(bool value);

  void clear_request();
  RequestCase request_case() const;
  // @@protoc_insertion_point(class_scope:exchange.Request)
 private:
  void set_has_method_call();
  void set_has_importation();
  void set_has_constructor();
  void set_has_eval();
  void set_has_dynamic_inherit();

  inline bool has_request() const;
  inline void clear_has_request();

  ::google::protobuf::internal::InternalMetadataWithArena _internal_metadata_;
  ::google::protobuf::internal::ArenaStringPtr assignedid_;
  union RequestUnion {
    RequestUnion() {}
    ::exchange::MethodCallRequest* method_call_;
    ::exchange::ImportRequest* importation_;
    ::exchange::ConstructorRequest* constructor_;
    bool eval_;
    bool dynamic_inherit_;
  } request_;
  mutable ::google::protobuf::internal::CachedSize _cached_size_;
  ::google::protobuf::uint32 _oneof_case_[1];

  friend struct ::protobuf_exchange_2eproto::TableStruct;
};
// -------------------------------------------------------------------

class MethodCallRequest : public ::google::protobuf::Message /* @@protoc_insertion_point(class_definition:exchange.MethodCallRequest) */ {
 public:
  MethodCallRequest();
  virtual ~MethodCallRequest();

  MethodCallRequest(const MethodCallRequest& from);

  inline MethodCallRequest& operator=(const MethodCallRequest& from) {
    CopyFrom(from);
    return *this;
  }
  #if LANG_CXX11
  MethodCallRequest(MethodCallRequest&& from) noexcept
    : MethodCallRequest() {
    *this = ::std::move(from);
  }

  inline MethodCallRequest& operator=(MethodCallRequest&& from) noexcept {
    if (GetArenaNoVirtual() == from.GetArenaNoVirtual()) {
      if (this != &from) InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }
  #endif
  static const ::google::protobuf::Descriptor* descriptor();
  static const MethodCallRequest& default_instance();

  static void InitAsDefaultInstance();  // FOR INTERNAL USE ONLY
  static inline const MethodCallRequest* internal_default_instance() {
    return reinterpret_cast<const MethodCallRequest*>(
               &_MethodCallRequest_default_instance_);
  }
  static constexpr int kIndexInFileMessages =
    1;

  void Swap(MethodCallRequest* other);
  friend void swap(MethodCallRequest& a, MethodCallRequest& b) {
    a.Swap(&b);
  }

  // implements Message ----------------------------------------------

  inline MethodCallRequest* New() const final {
    return CreateMaybeMessage<MethodCallRequest>(NULL);
  }

  MethodCallRequest* New(::google::protobuf::Arena* arena) const final {
    return CreateMaybeMessage<MethodCallRequest>(arena);
  }
  void CopyFrom(const ::google::protobuf::Message& from) final;
  void MergeFrom(const ::google::protobuf::Message& from) final;
  void CopyFrom(const MethodCallRequest& from);
  void MergeFrom(const MethodCallRequest& from);
  void Clear() final;
  bool IsInitialized() const final;

  size_t ByteSizeLong() const final;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input) final;
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const final;
  ::google::protobuf::uint8* InternalSerializeWithCachedSizesToArray(
      bool deterministic, ::google::protobuf::uint8* target) const final;
  int GetCachedSize() const final { return _cached_size_.Get(); }

  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const final;
  void InternalSwap(MethodCallRequest* other);
  private:
  inline ::google::protobuf::Arena* GetArenaNoVirtual() const {
    return NULL;
  }
  inline void* MaybeArenaPtr() const {
    return NULL;
  }
  public:

  ::google::protobuf::Metadata GetMetadata() const final;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // repeated .exchange.Argument arg = 3;
  int arg_size() const;
  void clear_arg();
  static const int kArgFieldNumber = 3;
  ::exchange::Argument* mutable_arg(int index);
  ::google::protobuf::RepeatedPtrField< ::exchange::Argument >*
      mutable_arg();
  const ::exchange::Argument& arg(int index) const;
  ::exchange::Argument* add_arg();
  const ::google::protobuf::RepeatedPtrField< ::exchange::Argument >&
      arg() const;

  // string methodName = 1;
  void clear_methodname();
  static const int kMethodNameFieldNumber = 1;
  const ::std::string& methodname() const;
  void set_methodname(const ::std::string& value);
  #if LANG_CXX11
  void set_methodname(::std::string&& value);
  #endif
  void set_methodname(const char* value);
  void set_methodname(const char* value, size_t size);
  ::std::string* mutable_methodname();
  ::std::string* release_methodname();
  void set_allocated_methodname(::std::string* methodname);

  // string objectID = 2;
  void clear_objectid();
  static const int kObjectIDFieldNumber = 2;
  const ::std::string& objectid() const;
  void set_objectid(const ::std::string& value);
  #if LANG_CXX11
  void set_objectid(::std::string&& value);
  #endif
  void set_objectid(const char* value);
  void set_objectid(const char* value, size_t size);
  ::std::string* mutable_objectid();
  ::std::string* release_objectid();
  void set_allocated_objectid(::std::string* objectid);

  // string type = 8;
  void clear_type();
  static const int kTypeFieldNumber = 8;
  const ::std::string& type() const;
  void set_type(const ::std::string& value);
  #if LANG_CXX11
  void set_type(::std::string&& value);
  #endif
  void set_type(const char* value);
  void set_type(const char* value, size_t size);
  ::std::string* mutable_type();
  ::std::string* release_type();
  void set_allocated_type(::std::string* type);

  // bool static = 4;
  void clear_static_();
  static const int kStaticFieldNumber = 4;
  bool static_() const;
  void set_static_(bool value);

  // bool doGetReturnValue = 5;
  void clear_dogetreturnvalue();
  static const int kDoGetReturnValueFieldNumber = 5;
  bool dogetreturnvalue() const;
  void set_dogetreturnvalue(bool value);

  // bool property = 6;
  void clear_property();
  static const int kPropertyFieldNumber = 6;
  bool property() const;
  void set_property(bool value);

  // @@protoc_insertion_point(class_scope:exchange.MethodCallRequest)
 private:

  ::google::protobuf::internal::InternalMetadataWithArena _internal_metadata_;
  ::google::protobuf::RepeatedPtrField< ::exchange::Argument > arg_;
  ::google::protobuf::internal::ArenaStringPtr methodname_;
  ::google::protobuf::internal::ArenaStringPtr objectid_;
  ::google::protobuf::internal::ArenaStringPtr type_;
  bool static__;
  bool dogetreturnvalue_;
  bool property_;
  mutable ::google::protobuf::internal::CachedSize _cached_size_;
  friend struct ::protobuf_exchange_2eproto::TableStruct;
};
// -------------------------------------------------------------------

class Argument : public ::google::protobuf::Message /* @@protoc_insertion_point(class_definition:exchange.Argument) */ {
 public:
  Argument();
  virtual ~Argument();

  Argument(const Argument& from);

  inline Argument& operator=(const Argument& from) {
    CopyFrom(from);
    return *this;
  }
  #if LANG_CXX11
  Argument(Argument&& from) noexcept
    : Argument() {
    *this = ::std::move(from);
  }

  inline Argument& operator=(Argument&& from) noexcept {
    if (GetArenaNoVirtual() == from.GetArenaNoVirtual()) {
      if (this != &from) InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }
  #endif
  static const ::google::protobuf::Descriptor* descriptor();
  static const Argument& default_instance();

  enum ValueCase {
    kStringValue = 2,
    kIntValue = 3,
    VALUE_NOT_SET = 0,
  };

  static void InitAsDefaultInstance();  // FOR INTERNAL USE ONLY
  static inline const Argument* internal_default_instance() {
    return reinterpret_cast<const Argument*>(
               &_Argument_default_instance_);
  }
  static constexpr int kIndexInFileMessages =
    2;

  void Swap(Argument* other);
  friend void swap(Argument& a, Argument& b) {
    a.Swap(&b);
  }

  // implements Message ----------------------------------------------

  inline Argument* New() const final {
    return CreateMaybeMessage<Argument>(NULL);
  }

  Argument* New(::google::protobuf::Arena* arena) const final {
    return CreateMaybeMessage<Argument>(arena);
  }
  void CopyFrom(const ::google::protobuf::Message& from) final;
  void MergeFrom(const ::google::protobuf::Message& from) final;
  void CopyFrom(const Argument& from);
  void MergeFrom(const Argument& from);
  void Clear() final;
  bool IsInitialized() const final;

  size_t ByteSizeLong() const final;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input) final;
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const final;
  ::google::protobuf::uint8* InternalSerializeWithCachedSizesToArray(
      bool deterministic, ::google::protobuf::uint8* target) const final;
  int GetCachedSize() const final { return _cached_size_.Get(); }

  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const final;
  void InternalSwap(Argument* other);
  private:
  inline ::google::protobuf::Arena* GetArenaNoVirtual() const {
    return NULL;
  }
  inline void* MaybeArenaPtr() const {
    return NULL;
  }
  public:

  ::google::protobuf::Metadata GetMetadata() const final;

  // nested types ----------------------------------------------------

  typedef Argument_ArgumentType ArgumentType;
  static const ArgumentType PERSISTENCE =
    Argument_ArgumentType_PERSISTENCE;
  static const ArgumentType INPLACE =
    Argument_ArgumentType_INPLACE;
  static inline bool ArgumentType_IsValid(int value) {
    return Argument_ArgumentType_IsValid(value);
  }
  static const ArgumentType ArgumentType_MIN =
    Argument_ArgumentType_ArgumentType_MIN;
  static const ArgumentType ArgumentType_MAX =
    Argument_ArgumentType_ArgumentType_MAX;
  static const int ArgumentType_ARRAYSIZE =
    Argument_ArgumentType_ArgumentType_ARRAYSIZE;
  static inline const ::google::protobuf::EnumDescriptor*
  ArgumentType_descriptor() {
    return Argument_ArgumentType_descriptor();
  }
  static inline const ::std::string& ArgumentType_Name(ArgumentType value) {
    return Argument_ArgumentType_Name(value);
  }
  static inline bool ArgumentType_Parse(const ::std::string& name,
      ArgumentType* value) {
    return Argument_ArgumentType_Parse(name, value);
  }

  // accessors -------------------------------------------------------

  // string key = 4;
  void clear_key();
  static const int kKeyFieldNumber = 4;
  const ::std::string& key() const;
  void set_key(const ::std::string& value);
  #if LANG_CXX11
  void set_key(::std::string&& value);
  #endif
  void set_key(const char* value);
  void set_key(const char* value, size_t size);
  ::std::string* mutable_key();
  ::std::string* release_key();
  void set_allocated_key(::std::string* key);

  // .exchange.Argument.ArgumentType type = 1;
  void clear_type();
  static const int kTypeFieldNumber = 1;
  ::exchange::Argument_ArgumentType type() const;
  void set_type(::exchange::Argument_ArgumentType value);

  // string string_value = 2;
  private:
  bool has_string_value() const;
  public:
  void clear_string_value();
  static const int kStringValueFieldNumber = 2;
  const ::std::string& string_value() const;
  void set_string_value(const ::std::string& value);
  #if LANG_CXX11
  void set_string_value(::std::string&& value);
  #endif
  void set_string_value(const char* value);
  void set_string_value(const char* value, size_t size);
  ::std::string* mutable_string_value();
  ::std::string* release_string_value();
  void set_allocated_string_value(::std::string* string_value);

  // int32 int_value = 3;
  private:
  bool has_int_value() const;
  public:
  void clear_int_value();
  static const int kIntValueFieldNumber = 3;
  ::google::protobuf::int32 int_value() const;
  void set_int_value(::google::protobuf::int32 value);

  void clear_value();
  ValueCase value_case() const;
  // @@protoc_insertion_point(class_scope:exchange.Argument)
 private:
  void set_has_string_value();
  void set_has_int_value();

  inline bool has_value() const;
  inline void clear_has_value();

  ::google::protobuf::internal::InternalMetadataWithArena _internal_metadata_;
  ::google::protobuf::internal::ArenaStringPtr key_;
  int type_;
  union ValueUnion {
    ValueUnion() {}
    ::google::protobuf::internal::ArenaStringPtr string_value_;
    ::google::protobuf::int32 int_value_;
  } value_;
  mutable ::google::protobuf::internal::CachedSize _cached_size_;
  ::google::protobuf::uint32 _oneof_case_[1];

  friend struct ::protobuf_exchange_2eproto::TableStruct;
};
// -------------------------------------------------------------------

class ImportRequest : public ::google::protobuf::Message /* @@protoc_insertion_point(class_definition:exchange.ImportRequest) */ {
 public:
  ImportRequest();
  virtual ~ImportRequest();

  ImportRequest(const ImportRequest& from);

  inline ImportRequest& operator=(const ImportRequest& from) {
    CopyFrom(from);
    return *this;
  }
  #if LANG_CXX11
  ImportRequest(ImportRequest&& from) noexcept
    : ImportRequest() {
    *this = ::std::move(from);
  }

  inline ImportRequest& operator=(ImportRequest&& from) noexcept {
    if (GetArenaNoVirtual() == from.GetArenaNoVirtual()) {
      if (this != &from) InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }
  #endif
  static const ::google::protobuf::Descriptor* descriptor();
  static const ImportRequest& default_instance();

  static void InitAsDefaultInstance();  // FOR INTERNAL USE ONLY
  static inline const ImportRequest* internal_default_instance() {
    return reinterpret_cast<const ImportRequest*>(
               &_ImportRequest_default_instance_);
  }
  static constexpr int kIndexInFileMessages =
    3;

  void Swap(ImportRequest* other);
  friend void swap(ImportRequest& a, ImportRequest& b) {
    a.Swap(&b);
  }

  // implements Message ----------------------------------------------

  inline ImportRequest* New() const final {
    return CreateMaybeMessage<ImportRequest>(NULL);
  }

  ImportRequest* New(::google::protobuf::Arena* arena) const final {
    return CreateMaybeMessage<ImportRequest>(arena);
  }
  void CopyFrom(const ::google::protobuf::Message& from) final;
  void MergeFrom(const ::google::protobuf::Message& from) final;
  void CopyFrom(const ImportRequest& from);
  void MergeFrom(const ImportRequest& from);
  void Clear() final;
  bool IsInitialized() const final;

  size_t ByteSizeLong() const final;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input) final;
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const final;
  ::google::protobuf::uint8* InternalSerializeWithCachedSizesToArray(
      bool deterministic, ::google::protobuf::uint8* target) const final;
  int GetCachedSize() const final { return _cached_size_.Get(); }

  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const final;
  void InternalSwap(ImportRequest* other);
  private:
  inline ::google::protobuf::Arena* GetArenaNoVirtual() const {
    return NULL;
  }
  inline void* MaybeArenaPtr() const {
    return NULL;
  }
  public:

  ::google::protobuf::Metadata GetMetadata() const final;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // string importedName = 1;
  void clear_importedname();
  static const int kImportedNameFieldNumber = 1;
  const ::std::string& importedname() const;
  void set_importedname(const ::std::string& value);
  #if LANG_CXX11
  void set_importedname(::std::string&& value);
  #endif
  void set_importedname(const char* value);
  void set_importedname(const char* value, size_t size);
  ::std::string* mutable_importedname();
  ::std::string* release_importedname();
  void set_allocated_importedname(::std::string* importedname);

  // @@protoc_insertion_point(class_scope:exchange.ImportRequest)
 private:

  ::google::protobuf::internal::InternalMetadataWithArena _internal_metadata_;
  ::google::protobuf::internal::ArenaStringPtr importedname_;
  mutable ::google::protobuf::internal::CachedSize _cached_size_;
  friend struct ::protobuf_exchange_2eproto::TableStruct;
};
// -------------------------------------------------------------------

class ConstructorRequest : public ::google::protobuf::Message /* @@protoc_insertion_point(class_definition:exchange.ConstructorRequest) */ {
 public:
  ConstructorRequest();
  virtual ~ConstructorRequest();

  ConstructorRequest(const ConstructorRequest& from);

  inline ConstructorRequest& operator=(const ConstructorRequest& from) {
    CopyFrom(from);
    return *this;
  }
  #if LANG_CXX11
  ConstructorRequest(ConstructorRequest&& from) noexcept
    : ConstructorRequest() {
    *this = ::std::move(from);
  }

  inline ConstructorRequest& operator=(ConstructorRequest&& from) noexcept {
    if (GetArenaNoVirtual() == from.GetArenaNoVirtual()) {
      if (this != &from) InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }
  #endif
  static const ::google::protobuf::Descriptor* descriptor();
  static const ConstructorRequest& default_instance();

  static void InitAsDefaultInstance();  // FOR INTERNAL USE ONLY
  static inline const ConstructorRequest* internal_default_instance() {
    return reinterpret_cast<const ConstructorRequest*>(
               &_ConstructorRequest_default_instance_);
  }
  static constexpr int kIndexInFileMessages =
    4;

  void Swap(ConstructorRequest* other);
  friend void swap(ConstructorRequest& a, ConstructorRequest& b) {
    a.Swap(&b);
  }

  // implements Message ----------------------------------------------

  inline ConstructorRequest* New() const final {
    return CreateMaybeMessage<ConstructorRequest>(NULL);
  }

  ConstructorRequest* New(::google::protobuf::Arena* arena) const final {
    return CreateMaybeMessage<ConstructorRequest>(arena);
  }
  void CopyFrom(const ::google::protobuf::Message& from) final;
  void MergeFrom(const ::google::protobuf::Message& from) final;
  void CopyFrom(const ConstructorRequest& from);
  void MergeFrom(const ConstructorRequest& from);
  void Clear() final;
  bool IsInitialized() const final;

  size_t ByteSizeLong() const final;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input) final;
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const final;
  ::google::protobuf::uint8* InternalSerializeWithCachedSizesToArray(
      bool deterministic, ::google::protobuf::uint8* target) const final;
  int GetCachedSize() const final { return _cached_size_.Get(); }

  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const final;
  void InternalSwap(ConstructorRequest* other);
  private:
  inline ::google::protobuf::Arena* GetArenaNoVirtual() const {
    return NULL;
  }
  inline void* MaybeArenaPtr() const {
    return NULL;
  }
  public:

  ::google::protobuf::Metadata GetMetadata() const final;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // repeated .exchange.Argument arg = 2;
  int arg_size() const;
  void clear_arg();
  static const int kArgFieldNumber = 2;
  ::exchange::Argument* mutable_arg(int index);
  ::google::protobuf::RepeatedPtrField< ::exchange::Argument >*
      mutable_arg();
  const ::exchange::Argument& arg(int index) const;
  ::exchange::Argument* add_arg();
  const ::google::protobuf::RepeatedPtrField< ::exchange::Argument >&
      arg() const;

  // string class_name = 1;
  void clear_class_name();
  static const int kClassNameFieldNumber = 1;
  const ::std::string& class_name() const;
  void set_class_name(const ::std::string& value);
  #if LANG_CXX11
  void set_class_name(::std::string&& value);
  #endif
  void set_class_name(const char* value);
  void set_class_name(const char* value, size_t size);
  ::std::string* mutable_class_name();
  ::std::string* release_class_name();
  void set_allocated_class_name(::std::string* class_name);

  // @@protoc_insertion_point(class_scope:exchange.ConstructorRequest)
 private:

  ::google::protobuf::internal::InternalMetadataWithArena _internal_metadata_;
  ::google::protobuf::RepeatedPtrField< ::exchange::Argument > arg_;
  ::google::protobuf::internal::ArenaStringPtr class_name_;
  mutable ::google::protobuf::internal::CachedSize _cached_size_;
  friend struct ::protobuf_exchange_2eproto::TableStruct;
};
// -------------------------------------------------------------------

class ChannelResponse : public ::google::protobuf::Message /* @@protoc_insertion_point(class_definition:exchange.ChannelResponse) */ {
 public:
  ChannelResponse();
  virtual ~ChannelResponse();

  ChannelResponse(const ChannelResponse& from);

  inline ChannelResponse& operator=(const ChannelResponse& from) {
    CopyFrom(from);
    return *this;
  }
  #if LANG_CXX11
  ChannelResponse(ChannelResponse&& from) noexcept
    : ChannelResponse() {
    *this = ::std::move(from);
  }

  inline ChannelResponse& operator=(ChannelResponse&& from) noexcept {
    if (GetArenaNoVirtual() == from.GetArenaNoVirtual()) {
      if (this != &from) InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }
  #endif
  static const ::google::protobuf::Descriptor* descriptor();
  static const ChannelResponse& default_instance();

  enum ReturnValueCase {
    kReturnValueString = 1,
    kReturnValueInt = 2,
    kExceptionMessage = 3,
    kNoReturnValue = 4,
    RETURN_VALUE_NOT_SET = 0,
  };

  static void InitAsDefaultInstance();  // FOR INTERNAL USE ONLY
  static inline const ChannelResponse* internal_default_instance() {
    return reinterpret_cast<const ChannelResponse*>(
               &_ChannelResponse_default_instance_);
  }
  static constexpr int kIndexInFileMessages =
    5;

  void Swap(ChannelResponse* other);
  friend void swap(ChannelResponse& a, ChannelResponse& b) {
    a.Swap(&b);
  }

  // implements Message ----------------------------------------------

  inline ChannelResponse* New() const final {
    return CreateMaybeMessage<ChannelResponse>(NULL);
  }

  ChannelResponse* New(::google::protobuf::Arena* arena) const final {
    return CreateMaybeMessage<ChannelResponse>(arena);
  }
  void CopyFrom(const ::google::protobuf::Message& from) final;
  void MergeFrom(const ::google::protobuf::Message& from) final;
  void CopyFrom(const ChannelResponse& from);
  void MergeFrom(const ChannelResponse& from);
  void Clear() final;
  bool IsInitialized() const final;

  size_t ByteSizeLong() const final;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input) final;
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const final;
  ::google::protobuf::uint8* InternalSerializeWithCachedSizesToArray(
      bool deterministic, ::google::protobuf::uint8* target) const final;
  int GetCachedSize() const final { return _cached_size_.Get(); }

  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const final;
  void InternalSwap(ChannelResponse* other);
  private:
  inline ::google::protobuf::Arena* GetArenaNoVirtual() const {
    return NULL;
  }
  inline void* MaybeArenaPtr() const {
    return NULL;
  }
  public:

  ::google::protobuf::Metadata GetMetadata() const final;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // string assignedID = 7;
  void clear_assignedid();
  static const int kAssignedIDFieldNumber = 7;
  const ::std::string& assignedid() const;
  void set_assignedid(const ::std::string& value);
  #if LANG_CXX11
  void set_assignedid(::std::string&& value);
  #endif
  void set_assignedid(const char* value);
  void set_assignedid(const char* value, size_t size);
  ::std::string* mutable_assignedid();
  ::std::string* release_assignedid();
  void set_allocated_assignedid(::std::string* assignedid);

  // string return_value_string = 1;
  private:
  bool has_return_value_string() const;
  public:
  void clear_return_value_string();
  static const int kReturnValueStringFieldNumber = 1;
  const ::std::string& return_value_string() const;
  void set_return_value_string(const ::std::string& value);
  #if LANG_CXX11
  void set_return_value_string(::std::string&& value);
  #endif
  void set_return_value_string(const char* value);
  void set_return_value_string(const char* value, size_t size);
  ::std::string* mutable_return_value_string();
  ::std::string* release_return_value_string();
  void set_allocated_return_value_string(::std::string* return_value_string);

  // int32 return_value_int = 2;
  private:
  bool has_return_value_int() const;
  public:
  void clear_return_value_int();
  static const int kReturnValueIntFieldNumber = 2;
  ::google::protobuf::int32 return_value_int() const;
  void set_return_value_int(::google::protobuf::int32 value);

  // string exception_message = 3;
  private:
  bool has_exception_message() const;
  public:
  void clear_exception_message();
  static const int kExceptionMessageFieldNumber = 3;
  const ::std::string& exception_message() const;
  void set_exception_message(const ::std::string& value);
  #if LANG_CXX11
  void set_exception_message(::std::string&& value);
  #endif
  void set_exception_message(const char* value);
  void set_exception_message(const char* value, size_t size);
  ::std::string* mutable_exception_message();
  ::std::string* release_exception_message();
  void set_allocated_exception_message(::std::string* exception_message);

  // bool no_return_value = 4;
  private:
  bool has_no_return_value() const;
  public:
  void clear_no_return_value();
  static const int kNoReturnValueFieldNumber = 4;
  bool no_return_value() const;
  void set_no_return_value(bool value);

  void clear_return_value();
  ReturnValueCase return_value_case() const;
  // @@protoc_insertion_point(class_scope:exchange.ChannelResponse)
 private:
  void set_has_return_value_string();
  void set_has_return_value_int();
  void set_has_exception_message();
  void set_has_no_return_value();

  inline bool has_return_value() const;
  inline void clear_has_return_value();

  ::google::protobuf::internal::InternalMetadataWithArena _internal_metadata_;
  ::google::protobuf::internal::ArenaStringPtr assignedid_;
  union ReturnValueUnion {
    ReturnValueUnion() {}
    ::google::protobuf::internal::ArenaStringPtr return_value_string_;
    ::google::protobuf::int32 return_value_int_;
    ::google::protobuf::internal::ArenaStringPtr exception_message_;
    bool no_return_value_;
  } return_value_;
  mutable ::google::protobuf::internal::CachedSize _cached_size_;
  ::google::protobuf::uint32 _oneof_case_[1];

  friend struct ::protobuf_exchange_2eproto::TableStruct;
};
// ===================================================================


// ===================================================================

#ifdef __GNUC__
  #pragma GCC diagnostic push
  #pragma GCC diagnostic ignored "-Wstrict-aliasing"
#endif  // __GNUC__
// Request

// .exchange.MethodCallRequest method_call = 1;
inline bool Request::has_method_call() const {
  return request_case() == kMethodCall;
}
inline void Request::set_has_method_call() {
  _oneof_case_[0] = kMethodCall;
}
inline void Request::clear_method_call() {
  if (has_method_call()) {
    delete request_.method_call_;
    clear_has_request();
  }
}
inline const ::exchange::MethodCallRequest& Request::_internal_method_call() const {
  return *request_.method_call_;
}
inline ::exchange::MethodCallRequest* Request::release_method_call() {
  // @@protoc_insertion_point(field_release:exchange.Request.method_call)
  if (has_method_call()) {
    clear_has_request();
      ::exchange::MethodCallRequest* temp = request_.method_call_;
    request_.method_call_ = NULL;
    return temp;
  } else {
    return NULL;
  }
}
inline const ::exchange::MethodCallRequest& Request::method_call() const {
  // @@protoc_insertion_point(field_get:exchange.Request.method_call)
  return has_method_call()
      ? *request_.method_call_
      : *reinterpret_cast< ::exchange::MethodCallRequest*>(&::exchange::_MethodCallRequest_default_instance_);
}
inline ::exchange::MethodCallRequest* Request::mutable_method_call() {
  if (!has_method_call()) {
    clear_request();
    set_has_method_call();
    request_.method_call_ = CreateMaybeMessage< ::exchange::MethodCallRequest >(
        GetArenaNoVirtual());
  }
  // @@protoc_insertion_point(field_mutable:exchange.Request.method_call)
  return request_.method_call_;
}

// .exchange.ImportRequest importation = 2;
inline bool Request::has_importation() const {
  return request_case() == kImportation;
}
inline void Request::set_has_importation() {
  _oneof_case_[0] = kImportation;
}
inline void Request::clear_importation() {
  if (has_importation()) {
    delete request_.importation_;
    clear_has_request();
  }
}
inline const ::exchange::ImportRequest& Request::_internal_importation() const {
  return *request_.importation_;
}
inline ::exchange::ImportRequest* Request::release_importation() {
  // @@protoc_insertion_point(field_release:exchange.Request.importation)
  if (has_importation()) {
    clear_has_request();
      ::exchange::ImportRequest* temp = request_.importation_;
    request_.importation_ = NULL;
    return temp;
  } else {
    return NULL;
  }
}
inline const ::exchange::ImportRequest& Request::importation() const {
  // @@protoc_insertion_point(field_get:exchange.Request.importation)
  return has_importation()
      ? *request_.importation_
      : *reinterpret_cast< ::exchange::ImportRequest*>(&::exchange::_ImportRequest_default_instance_);
}
inline ::exchange::ImportRequest* Request::mutable_importation() {
  if (!has_importation()) {
    clear_request();
    set_has_importation();
    request_.importation_ = CreateMaybeMessage< ::exchange::ImportRequest >(
        GetArenaNoVirtual());
  }
  // @@protoc_insertion_point(field_mutable:exchange.Request.importation)
  return request_.importation_;
}

// .exchange.ConstructorRequest constructor = 3;
inline bool Request::has_constructor() const {
  return request_case() == kConstructor;
}
inline void Request::set_has_constructor() {
  _oneof_case_[0] = kConstructor;
}
inline void Request::clear_constructor() {
  if (has_constructor()) {
    delete request_.constructor_;
    clear_has_request();
  }
}
inline const ::exchange::ConstructorRequest& Request::_internal_constructor() const {
  return *request_.constructor_;
}
inline ::exchange::ConstructorRequest* Request::release_constructor() {
  // @@protoc_insertion_point(field_release:exchange.Request.constructor)
  if (has_constructor()) {
    clear_has_request();
      ::exchange::ConstructorRequest* temp = request_.constructor_;
    request_.constructor_ = NULL;
    return temp;
  } else {
    return NULL;
  }
}
inline const ::exchange::ConstructorRequest& Request::constructor() const {
  // @@protoc_insertion_point(field_get:exchange.Request.constructor)
  return has_constructor()
      ? *request_.constructor_
      : *reinterpret_cast< ::exchange::ConstructorRequest*>(&::exchange::_ConstructorRequest_default_instance_);
}
inline ::exchange::ConstructorRequest* Request::mutable_constructor() {
  if (!has_constructor()) {
    clear_request();
    set_has_constructor();
    request_.constructor_ = CreateMaybeMessage< ::exchange::ConstructorRequest >(
        GetArenaNoVirtual());
  }
  // @@protoc_insertion_point(field_mutable:exchange.Request.constructor)
  return request_.constructor_;
}

// bool eval = 4;
inline bool Request::has_eval() const {
  return request_case() == kEval;
}
inline void Request::set_has_eval() {
  _oneof_case_[0] = kEval;
}
inline void Request::clear_eval() {
  if (has_eval()) {
    request_.eval_ = false;
    clear_has_request();
  }
}
inline bool Request::eval() const {
  // @@protoc_insertion_point(field_get:exchange.Request.eval)
  if (has_eval()) {
    return request_.eval_;
  }
  return false;
}
inline void Request::set_eval(bool value) {
  if (!has_eval()) {
    clear_request();
    set_has_eval();
  }
  request_.eval_ = value;
  // @@protoc_insertion_point(field_set:exchange.Request.eval)
}

// bool dynamic_inherit = 5;
inline bool Request::has_dynamic_inherit() const {
  return request_case() == kDynamicInherit;
}
inline void Request::set_has_dynamic_inherit() {
  _oneof_case_[0] = kDynamicInherit;
}
inline void Request::clear_dynamic_inherit() {
  if (has_dynamic_inherit()) {
    request_.dynamic_inherit_ = false;
    clear_has_request();
  }
}
inline bool Request::dynamic_inherit() const {
  // @@protoc_insertion_point(field_get:exchange.Request.dynamic_inherit)
  if (has_dynamic_inherit()) {
    return request_.dynamic_inherit_;
  }
  return false;
}
inline void Request::set_dynamic_inherit(bool value) {
  if (!has_dynamic_inherit()) {
    clear_request();
    set_has_dynamic_inherit();
  }
  request_.dynamic_inherit_ = value;
  // @@protoc_insertion_point(field_set:exchange.Request.dynamic_inherit)
}

// string assignedID = 7;
inline void Request::clear_assignedid() {
  assignedid_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline const ::std::string& Request::assignedid() const {
  // @@protoc_insertion_point(field_get:exchange.Request.assignedID)
  return assignedid_.GetNoArena();
}
inline void Request::set_assignedid(const ::std::string& value) {
  
  assignedid_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value);
  // @@protoc_insertion_point(field_set:exchange.Request.assignedID)
}
#if LANG_CXX11
inline void Request::set_assignedid(::std::string&& value) {
  
  assignedid_.SetNoArena(
    &::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::move(value));
  // @@protoc_insertion_point(field_set_rvalue:exchange.Request.assignedID)
}
#endif
inline void Request::set_assignedid(const char* value) {
  GOOGLE_DCHECK(value != NULL);
  
  assignedid_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:exchange.Request.assignedID)
}
inline void Request::set_assignedid(const char* value, size_t size) {
  
  assignedid_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:exchange.Request.assignedID)
}
inline ::std::string* Request::mutable_assignedid() {
  
  // @@protoc_insertion_point(field_mutable:exchange.Request.assignedID)
  return assignedid_.MutableNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline ::std::string* Request::release_assignedid() {
  // @@protoc_insertion_point(field_release:exchange.Request.assignedID)
  
  return assignedid_.ReleaseNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline void Request::set_allocated_assignedid(::std::string* assignedid) {
  if (assignedid != NULL) {
    
  } else {
    
  }
  assignedid_.SetAllocatedNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), assignedid);
  // @@protoc_insertion_point(field_set_allocated:exchange.Request.assignedID)
}

inline bool Request::has_request() const {
  return request_case() != REQUEST_NOT_SET;
}
inline void Request::clear_has_request() {
  _oneof_case_[0] = REQUEST_NOT_SET;
}
inline Request::RequestCase Request::request_case() const {
  return Request::RequestCase(_oneof_case_[0]);
}
// -------------------------------------------------------------------

// MethodCallRequest

// string methodName = 1;
inline void MethodCallRequest::clear_methodname() {
  methodname_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline const ::std::string& MethodCallRequest::methodname() const {
  // @@protoc_insertion_point(field_get:exchange.MethodCallRequest.methodName)
  return methodname_.GetNoArena();
}
inline void MethodCallRequest::set_methodname(const ::std::string& value) {
  
  methodname_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value);
  // @@protoc_insertion_point(field_set:exchange.MethodCallRequest.methodName)
}
#if LANG_CXX11
inline void MethodCallRequest::set_methodname(::std::string&& value) {
  
  methodname_.SetNoArena(
    &::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::move(value));
  // @@protoc_insertion_point(field_set_rvalue:exchange.MethodCallRequest.methodName)
}
#endif
inline void MethodCallRequest::set_methodname(const char* value) {
  GOOGLE_DCHECK(value != NULL);
  
  methodname_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:exchange.MethodCallRequest.methodName)
}
inline void MethodCallRequest::set_methodname(const char* value, size_t size) {
  
  methodname_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:exchange.MethodCallRequest.methodName)
}
inline ::std::string* MethodCallRequest::mutable_methodname() {
  
  // @@protoc_insertion_point(field_mutable:exchange.MethodCallRequest.methodName)
  return methodname_.MutableNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline ::std::string* MethodCallRequest::release_methodname() {
  // @@protoc_insertion_point(field_release:exchange.MethodCallRequest.methodName)
  
  return methodname_.ReleaseNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline void MethodCallRequest::set_allocated_methodname(::std::string* methodname) {
  if (methodname != NULL) {
    
  } else {
    
  }
  methodname_.SetAllocatedNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), methodname);
  // @@protoc_insertion_point(field_set_allocated:exchange.MethodCallRequest.methodName)
}

// string objectID = 2;
inline void MethodCallRequest::clear_objectid() {
  objectid_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline const ::std::string& MethodCallRequest::objectid() const {
  // @@protoc_insertion_point(field_get:exchange.MethodCallRequest.objectID)
  return objectid_.GetNoArena();
}
inline void MethodCallRequest::set_objectid(const ::std::string& value) {
  
  objectid_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value);
  // @@protoc_insertion_point(field_set:exchange.MethodCallRequest.objectID)
}
#if LANG_CXX11
inline void MethodCallRequest::set_objectid(::std::string&& value) {
  
  objectid_.SetNoArena(
    &::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::move(value));
  // @@protoc_insertion_point(field_set_rvalue:exchange.MethodCallRequest.objectID)
}
#endif
inline void MethodCallRequest::set_objectid(const char* value) {
  GOOGLE_DCHECK(value != NULL);
  
  objectid_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:exchange.MethodCallRequest.objectID)
}
inline void MethodCallRequest::set_objectid(const char* value, size_t size) {
  
  objectid_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:exchange.MethodCallRequest.objectID)
}
inline ::std::string* MethodCallRequest::mutable_objectid() {
  
  // @@protoc_insertion_point(field_mutable:exchange.MethodCallRequest.objectID)
  return objectid_.MutableNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline ::std::string* MethodCallRequest::release_objectid() {
  // @@protoc_insertion_point(field_release:exchange.MethodCallRequest.objectID)
  
  return objectid_.ReleaseNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline void MethodCallRequest::set_allocated_objectid(::std::string* objectid) {
  if (objectid != NULL) {
    
  } else {
    
  }
  objectid_.SetAllocatedNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), objectid);
  // @@protoc_insertion_point(field_set_allocated:exchange.MethodCallRequest.objectID)
}

// string type = 8;
inline void MethodCallRequest::clear_type() {
  type_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline const ::std::string& MethodCallRequest::type() const {
  // @@protoc_insertion_point(field_get:exchange.MethodCallRequest.type)
  return type_.GetNoArena();
}
inline void MethodCallRequest::set_type(const ::std::string& value) {
  
  type_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value);
  // @@protoc_insertion_point(field_set:exchange.MethodCallRequest.type)
}
#if LANG_CXX11
inline void MethodCallRequest::set_type(::std::string&& value) {
  
  type_.SetNoArena(
    &::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::move(value));
  // @@protoc_insertion_point(field_set_rvalue:exchange.MethodCallRequest.type)
}
#endif
inline void MethodCallRequest::set_type(const char* value) {
  GOOGLE_DCHECK(value != NULL);
  
  type_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:exchange.MethodCallRequest.type)
}
inline void MethodCallRequest::set_type(const char* value, size_t size) {
  
  type_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:exchange.MethodCallRequest.type)
}
inline ::std::string* MethodCallRequest::mutable_type() {
  
  // @@protoc_insertion_point(field_mutable:exchange.MethodCallRequest.type)
  return type_.MutableNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline ::std::string* MethodCallRequest::release_type() {
  // @@protoc_insertion_point(field_release:exchange.MethodCallRequest.type)
  
  return type_.ReleaseNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline void MethodCallRequest::set_allocated_type(::std::string* type) {
  if (type != NULL) {
    
  } else {
    
  }
  type_.SetAllocatedNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), type);
  // @@protoc_insertion_point(field_set_allocated:exchange.MethodCallRequest.type)
}

// repeated .exchange.Argument arg = 3;
inline int MethodCallRequest::arg_size() const {
  return arg_.size();
}
inline void MethodCallRequest::clear_arg() {
  arg_.Clear();
}
inline ::exchange::Argument* MethodCallRequest::mutable_arg(int index) {
  // @@protoc_insertion_point(field_mutable:exchange.MethodCallRequest.arg)
  return arg_.Mutable(index);
}
inline ::google::protobuf::RepeatedPtrField< ::exchange::Argument >*
MethodCallRequest::mutable_arg() {
  // @@protoc_insertion_point(field_mutable_list:exchange.MethodCallRequest.arg)
  return &arg_;
}
inline const ::exchange::Argument& MethodCallRequest::arg(int index) const {
  // @@protoc_insertion_point(field_get:exchange.MethodCallRequest.arg)
  return arg_.Get(index);
}
inline ::exchange::Argument* MethodCallRequest::add_arg() {
  // @@protoc_insertion_point(field_add:exchange.MethodCallRequest.arg)
  return arg_.Add();
}
inline const ::google::protobuf::RepeatedPtrField< ::exchange::Argument >&
MethodCallRequest::arg() const {
  // @@protoc_insertion_point(field_list:exchange.MethodCallRequest.arg)
  return arg_;
}

// bool static = 4;
inline void MethodCallRequest::clear_static_() {
  static__ = false;
}
inline bool MethodCallRequest::static_() const {
  // @@protoc_insertion_point(field_get:exchange.MethodCallRequest.static)
  return static__;
}
inline void MethodCallRequest::set_static_(bool value) {
  
  static__ = value;
  // @@protoc_insertion_point(field_set:exchange.MethodCallRequest.static)
}

// bool doGetReturnValue = 5;
inline void MethodCallRequest::clear_dogetreturnvalue() {
  dogetreturnvalue_ = false;
}
inline bool MethodCallRequest::dogetreturnvalue() const {
  // @@protoc_insertion_point(field_get:exchange.MethodCallRequest.doGetReturnValue)
  return dogetreturnvalue_;
}
inline void MethodCallRequest::set_dogetreturnvalue(bool value) {
  
  dogetreturnvalue_ = value;
  // @@protoc_insertion_point(field_set:exchange.MethodCallRequest.doGetReturnValue)
}

// bool property = 6;
inline void MethodCallRequest::clear_property() {
  property_ = false;
}
inline bool MethodCallRequest::property() const {
  // @@protoc_insertion_point(field_get:exchange.MethodCallRequest.property)
  return property_;
}
inline void MethodCallRequest::set_property(bool value) {
  
  property_ = value;
  // @@protoc_insertion_point(field_set:exchange.MethodCallRequest.property)
}

// -------------------------------------------------------------------

// Argument

// .exchange.Argument.ArgumentType type = 1;
inline void Argument::clear_type() {
  type_ = 0;
}
inline ::exchange::Argument_ArgumentType Argument::type() const {
  // @@protoc_insertion_point(field_get:exchange.Argument.type)
  return static_cast< ::exchange::Argument_ArgumentType >(type_);
}
inline void Argument::set_type(::exchange::Argument_ArgumentType value) {
  
  type_ = value;
  // @@protoc_insertion_point(field_set:exchange.Argument.type)
}

// string string_value = 2;
inline bool Argument::has_string_value() const {
  return value_case() == kStringValue;
}
inline void Argument::set_has_string_value() {
  _oneof_case_[0] = kStringValue;
}
inline void Argument::clear_string_value() {
  if (has_string_value()) {
    value_.string_value_.DestroyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
    clear_has_value();
  }
}
inline const ::std::string& Argument::string_value() const {
  // @@protoc_insertion_point(field_get:exchange.Argument.string_value)
  if (has_string_value()) {
    return value_.string_value_.GetNoArena();
  }
  return *&::google::protobuf::internal::GetEmptyStringAlreadyInited();
}
inline void Argument::set_string_value(const ::std::string& value) {
  // @@protoc_insertion_point(field_set:exchange.Argument.string_value)
  if (!has_string_value()) {
    clear_value();
    set_has_string_value();
    value_.string_value_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  }
  value_.string_value_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value);
  // @@protoc_insertion_point(field_set:exchange.Argument.string_value)
}
#if LANG_CXX11
inline void Argument::set_string_value(::std::string&& value) {
  // @@protoc_insertion_point(field_set:exchange.Argument.string_value)
  if (!has_string_value()) {
    clear_value();
    set_has_string_value();
    value_.string_value_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  }
  value_.string_value_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::move(value));
  // @@protoc_insertion_point(field_set_rvalue:exchange.Argument.string_value)
}
#endif
inline void Argument::set_string_value(const char* value) {
  GOOGLE_DCHECK(value != NULL);
  if (!has_string_value()) {
    clear_value();
    set_has_string_value();
    value_.string_value_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  }
  value_.string_value_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      ::std::string(value));
  // @@protoc_insertion_point(field_set_char:exchange.Argument.string_value)
}
inline void Argument::set_string_value(const char* value, size_t size) {
  if (!has_string_value()) {
    clear_value();
    set_has_string_value();
    value_.string_value_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  }
  value_.string_value_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(
      reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:exchange.Argument.string_value)
}
inline ::std::string* Argument::mutable_string_value() {
  if (!has_string_value()) {
    clear_value();
    set_has_string_value();
    value_.string_value_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  }
  // @@protoc_insertion_point(field_mutable:exchange.Argument.string_value)
  return value_.string_value_.MutableNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline ::std::string* Argument::release_string_value() {
  // @@protoc_insertion_point(field_release:exchange.Argument.string_value)
  if (has_string_value()) {
    clear_has_value();
    return value_.string_value_.ReleaseNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  } else {
    return NULL;
  }
}
inline void Argument::set_allocated_string_value(::std::string* string_value) {
  if (!has_string_value()) {
    value_.string_value_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  }
  clear_value();
  if (string_value != NULL) {
    set_has_string_value();
    value_.string_value_.SetAllocatedNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), string_value);
  }
  // @@protoc_insertion_point(field_set_allocated:exchange.Argument.string_value)
}

// int32 int_value = 3;
inline bool Argument::has_int_value() const {
  return value_case() == kIntValue;
}
inline void Argument::set_has_int_value() {
  _oneof_case_[0] = kIntValue;
}
inline void Argument::clear_int_value() {
  if (has_int_value()) {
    value_.int_value_ = 0;
    clear_has_value();
  }
}
inline ::google::protobuf::int32 Argument::int_value() const {
  // @@protoc_insertion_point(field_get:exchange.Argument.int_value)
  if (has_int_value()) {
    return value_.int_value_;
  }
  return 0;
}
inline void Argument::set_int_value(::google::protobuf::int32 value) {
  if (!has_int_value()) {
    clear_value();
    set_has_int_value();
  }
  value_.int_value_ = value;
  // @@protoc_insertion_point(field_set:exchange.Argument.int_value)
}

// string key = 4;
inline void Argument::clear_key() {
  key_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline const ::std::string& Argument::key() const {
  // @@protoc_insertion_point(field_get:exchange.Argument.key)
  return key_.GetNoArena();
}
inline void Argument::set_key(const ::std::string& value) {
  
  key_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value);
  // @@protoc_insertion_point(field_set:exchange.Argument.key)
}
#if LANG_CXX11
inline void Argument::set_key(::std::string&& value) {
  
  key_.SetNoArena(
    &::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::move(value));
  // @@protoc_insertion_point(field_set_rvalue:exchange.Argument.key)
}
#endif
inline void Argument::set_key(const char* value) {
  GOOGLE_DCHECK(value != NULL);
  
  key_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:exchange.Argument.key)
}
inline void Argument::set_key(const char* value, size_t size) {
  
  key_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:exchange.Argument.key)
}
inline ::std::string* Argument::mutable_key() {
  
  // @@protoc_insertion_point(field_mutable:exchange.Argument.key)
  return key_.MutableNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline ::std::string* Argument::release_key() {
  // @@protoc_insertion_point(field_release:exchange.Argument.key)
  
  return key_.ReleaseNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline void Argument::set_allocated_key(::std::string* key) {
  if (key != NULL) {
    
  } else {
    
  }
  key_.SetAllocatedNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), key);
  // @@protoc_insertion_point(field_set_allocated:exchange.Argument.key)
}

inline bool Argument::has_value() const {
  return value_case() != VALUE_NOT_SET;
}
inline void Argument::clear_has_value() {
  _oneof_case_[0] = VALUE_NOT_SET;
}
inline Argument::ValueCase Argument::value_case() const {
  return Argument::ValueCase(_oneof_case_[0]);
}
// -------------------------------------------------------------------

// ImportRequest

// string importedName = 1;
inline void ImportRequest::clear_importedname() {
  importedname_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline const ::std::string& ImportRequest::importedname() const {
  // @@protoc_insertion_point(field_get:exchange.ImportRequest.importedName)
  return importedname_.GetNoArena();
}
inline void ImportRequest::set_importedname(const ::std::string& value) {
  
  importedname_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value);
  // @@protoc_insertion_point(field_set:exchange.ImportRequest.importedName)
}
#if LANG_CXX11
inline void ImportRequest::set_importedname(::std::string&& value) {
  
  importedname_.SetNoArena(
    &::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::move(value));
  // @@protoc_insertion_point(field_set_rvalue:exchange.ImportRequest.importedName)
}
#endif
inline void ImportRequest::set_importedname(const char* value) {
  GOOGLE_DCHECK(value != NULL);
  
  importedname_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:exchange.ImportRequest.importedName)
}
inline void ImportRequest::set_importedname(const char* value, size_t size) {
  
  importedname_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:exchange.ImportRequest.importedName)
}
inline ::std::string* ImportRequest::mutable_importedname() {
  
  // @@protoc_insertion_point(field_mutable:exchange.ImportRequest.importedName)
  return importedname_.MutableNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline ::std::string* ImportRequest::release_importedname() {
  // @@protoc_insertion_point(field_release:exchange.ImportRequest.importedName)
  
  return importedname_.ReleaseNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline void ImportRequest::set_allocated_importedname(::std::string* importedname) {
  if (importedname != NULL) {
    
  } else {
    
  }
  importedname_.SetAllocatedNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), importedname);
  // @@protoc_insertion_point(field_set_allocated:exchange.ImportRequest.importedName)
}

// -------------------------------------------------------------------

// ConstructorRequest

// string class_name = 1;
inline void ConstructorRequest::clear_class_name() {
  class_name_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline const ::std::string& ConstructorRequest::class_name() const {
  // @@protoc_insertion_point(field_get:exchange.ConstructorRequest.class_name)
  return class_name_.GetNoArena();
}
inline void ConstructorRequest::set_class_name(const ::std::string& value) {
  
  class_name_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value);
  // @@protoc_insertion_point(field_set:exchange.ConstructorRequest.class_name)
}
#if LANG_CXX11
inline void ConstructorRequest::set_class_name(::std::string&& value) {
  
  class_name_.SetNoArena(
    &::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::move(value));
  // @@protoc_insertion_point(field_set_rvalue:exchange.ConstructorRequest.class_name)
}
#endif
inline void ConstructorRequest::set_class_name(const char* value) {
  GOOGLE_DCHECK(value != NULL);
  
  class_name_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:exchange.ConstructorRequest.class_name)
}
inline void ConstructorRequest::set_class_name(const char* value, size_t size) {
  
  class_name_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:exchange.ConstructorRequest.class_name)
}
inline ::std::string* ConstructorRequest::mutable_class_name() {
  
  // @@protoc_insertion_point(field_mutable:exchange.ConstructorRequest.class_name)
  return class_name_.MutableNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline ::std::string* ConstructorRequest::release_class_name() {
  // @@protoc_insertion_point(field_release:exchange.ConstructorRequest.class_name)
  
  return class_name_.ReleaseNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline void ConstructorRequest::set_allocated_class_name(::std::string* class_name) {
  if (class_name != NULL) {
    
  } else {
    
  }
  class_name_.SetAllocatedNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), class_name);
  // @@protoc_insertion_point(field_set_allocated:exchange.ConstructorRequest.class_name)
}

// repeated .exchange.Argument arg = 2;
inline int ConstructorRequest::arg_size() const {
  return arg_.size();
}
inline void ConstructorRequest::clear_arg() {
  arg_.Clear();
}
inline ::exchange::Argument* ConstructorRequest::mutable_arg(int index) {
  // @@protoc_insertion_point(field_mutable:exchange.ConstructorRequest.arg)
  return arg_.Mutable(index);
}
inline ::google::protobuf::RepeatedPtrField< ::exchange::Argument >*
ConstructorRequest::mutable_arg() {
  // @@protoc_insertion_point(field_mutable_list:exchange.ConstructorRequest.arg)
  return &arg_;
}
inline const ::exchange::Argument& ConstructorRequest::arg(int index) const {
  // @@protoc_insertion_point(field_get:exchange.ConstructorRequest.arg)
  return arg_.Get(index);
}
inline ::exchange::Argument* ConstructorRequest::add_arg() {
  // @@protoc_insertion_point(field_add:exchange.ConstructorRequest.arg)
  return arg_.Add();
}
inline const ::google::protobuf::RepeatedPtrField< ::exchange::Argument >&
ConstructorRequest::arg() const {
  // @@protoc_insertion_point(field_list:exchange.ConstructorRequest.arg)
  return arg_;
}

// -------------------------------------------------------------------

// ChannelResponse

// string return_value_string = 1;
inline bool ChannelResponse::has_return_value_string() const {
  return return_value_case() == kReturnValueString;
}
inline void ChannelResponse::set_has_return_value_string() {
  _oneof_case_[0] = kReturnValueString;
}
inline void ChannelResponse::clear_return_value_string() {
  if (has_return_value_string()) {
    return_value_.return_value_string_.DestroyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
    clear_has_return_value();
  }
}
inline const ::std::string& ChannelResponse::return_value_string() const {
  // @@protoc_insertion_point(field_get:exchange.ChannelResponse.return_value_string)
  if (has_return_value_string()) {
    return return_value_.return_value_string_.GetNoArena();
  }
  return *&::google::protobuf::internal::GetEmptyStringAlreadyInited();
}
inline void ChannelResponse::set_return_value_string(const ::std::string& value) {
  // @@protoc_insertion_point(field_set:exchange.ChannelResponse.return_value_string)
  if (!has_return_value_string()) {
    clear_return_value();
    set_has_return_value_string();
    return_value_.return_value_string_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  }
  return_value_.return_value_string_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value);
  // @@protoc_insertion_point(field_set:exchange.ChannelResponse.return_value_string)
}
#if LANG_CXX11
inline void ChannelResponse::set_return_value_string(::std::string&& value) {
  // @@protoc_insertion_point(field_set:exchange.ChannelResponse.return_value_string)
  if (!has_return_value_string()) {
    clear_return_value();
    set_has_return_value_string();
    return_value_.return_value_string_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  }
  return_value_.return_value_string_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::move(value));
  // @@protoc_insertion_point(field_set_rvalue:exchange.ChannelResponse.return_value_string)
}
#endif
inline void ChannelResponse::set_return_value_string(const char* value) {
  GOOGLE_DCHECK(value != NULL);
  if (!has_return_value_string()) {
    clear_return_value();
    set_has_return_value_string();
    return_value_.return_value_string_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  }
  return_value_.return_value_string_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      ::std::string(value));
  // @@protoc_insertion_point(field_set_char:exchange.ChannelResponse.return_value_string)
}
inline void ChannelResponse::set_return_value_string(const char* value, size_t size) {
  if (!has_return_value_string()) {
    clear_return_value();
    set_has_return_value_string();
    return_value_.return_value_string_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  }
  return_value_.return_value_string_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(
      reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:exchange.ChannelResponse.return_value_string)
}
inline ::std::string* ChannelResponse::mutable_return_value_string() {
  if (!has_return_value_string()) {
    clear_return_value();
    set_has_return_value_string();
    return_value_.return_value_string_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  }
  // @@protoc_insertion_point(field_mutable:exchange.ChannelResponse.return_value_string)
  return return_value_.return_value_string_.MutableNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline ::std::string* ChannelResponse::release_return_value_string() {
  // @@protoc_insertion_point(field_release:exchange.ChannelResponse.return_value_string)
  if (has_return_value_string()) {
    clear_has_return_value();
    return return_value_.return_value_string_.ReleaseNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  } else {
    return NULL;
  }
}
inline void ChannelResponse::set_allocated_return_value_string(::std::string* return_value_string) {
  if (!has_return_value_string()) {
    return_value_.return_value_string_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  }
  clear_return_value();
  if (return_value_string != NULL) {
    set_has_return_value_string();
    return_value_.return_value_string_.SetAllocatedNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), return_value_string);
  }
  // @@protoc_insertion_point(field_set_allocated:exchange.ChannelResponse.return_value_string)
}

// int32 return_value_int = 2;
inline bool ChannelResponse::has_return_value_int() const {
  return return_value_case() == kReturnValueInt;
}
inline void ChannelResponse::set_has_return_value_int() {
  _oneof_case_[0] = kReturnValueInt;
}
inline void ChannelResponse::clear_return_value_int() {
  if (has_return_value_int()) {
    return_value_.return_value_int_ = 0;
    clear_has_return_value();
  }
}
inline ::google::protobuf::int32 ChannelResponse::return_value_int() const {
  // @@protoc_insertion_point(field_get:exchange.ChannelResponse.return_value_int)
  if (has_return_value_int()) {
    return return_value_.return_value_int_;
  }
  return 0;
}
inline void ChannelResponse::set_return_value_int(::google::protobuf::int32 value) {
  if (!has_return_value_int()) {
    clear_return_value();
    set_has_return_value_int();
  }
  return_value_.return_value_int_ = value;
  // @@protoc_insertion_point(field_set:exchange.ChannelResponse.return_value_int)
}

// string exception_message = 3;
inline bool ChannelResponse::has_exception_message() const {
  return return_value_case() == kExceptionMessage;
}
inline void ChannelResponse::set_has_exception_message() {
  _oneof_case_[0] = kExceptionMessage;
}
inline void ChannelResponse::clear_exception_message() {
  if (has_exception_message()) {
    return_value_.exception_message_.DestroyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
    clear_has_return_value();
  }
}
inline const ::std::string& ChannelResponse::exception_message() const {
  // @@protoc_insertion_point(field_get:exchange.ChannelResponse.exception_message)
  if (has_exception_message()) {
    return return_value_.exception_message_.GetNoArena();
  }
  return *&::google::protobuf::internal::GetEmptyStringAlreadyInited();
}
inline void ChannelResponse::set_exception_message(const ::std::string& value) {
  // @@protoc_insertion_point(field_set:exchange.ChannelResponse.exception_message)
  if (!has_exception_message()) {
    clear_return_value();
    set_has_exception_message();
    return_value_.exception_message_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  }
  return_value_.exception_message_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value);
  // @@protoc_insertion_point(field_set:exchange.ChannelResponse.exception_message)
}
#if LANG_CXX11
inline void ChannelResponse::set_exception_message(::std::string&& value) {
  // @@protoc_insertion_point(field_set:exchange.ChannelResponse.exception_message)
  if (!has_exception_message()) {
    clear_return_value();
    set_has_exception_message();
    return_value_.exception_message_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  }
  return_value_.exception_message_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::move(value));
  // @@protoc_insertion_point(field_set_rvalue:exchange.ChannelResponse.exception_message)
}
#endif
inline void ChannelResponse::set_exception_message(const char* value) {
  GOOGLE_DCHECK(value != NULL);
  if (!has_exception_message()) {
    clear_return_value();
    set_has_exception_message();
    return_value_.exception_message_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  }
  return_value_.exception_message_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      ::std::string(value));
  // @@protoc_insertion_point(field_set_char:exchange.ChannelResponse.exception_message)
}
inline void ChannelResponse::set_exception_message(const char* value, size_t size) {
  if (!has_exception_message()) {
    clear_return_value();
    set_has_exception_message();
    return_value_.exception_message_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  }
  return_value_.exception_message_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(
      reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:exchange.ChannelResponse.exception_message)
}
inline ::std::string* ChannelResponse::mutable_exception_message() {
  if (!has_exception_message()) {
    clear_return_value();
    set_has_exception_message();
    return_value_.exception_message_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  }
  // @@protoc_insertion_point(field_mutable:exchange.ChannelResponse.exception_message)
  return return_value_.exception_message_.MutableNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline ::std::string* ChannelResponse::release_exception_message() {
  // @@protoc_insertion_point(field_release:exchange.ChannelResponse.exception_message)
  if (has_exception_message()) {
    clear_has_return_value();
    return return_value_.exception_message_.ReleaseNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  } else {
    return NULL;
  }
}
inline void ChannelResponse::set_allocated_exception_message(::std::string* exception_message) {
  if (!has_exception_message()) {
    return_value_.exception_message_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  }
  clear_return_value();
  if (exception_message != NULL) {
    set_has_exception_message();
    return_value_.exception_message_.SetAllocatedNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), exception_message);
  }
  // @@protoc_insertion_point(field_set_allocated:exchange.ChannelResponse.exception_message)
}

// bool no_return_value = 4;
inline bool ChannelResponse::has_no_return_value() const {
  return return_value_case() == kNoReturnValue;
}
inline void ChannelResponse::set_has_no_return_value() {
  _oneof_case_[0] = kNoReturnValue;
}
inline void ChannelResponse::clear_no_return_value() {
  if (has_no_return_value()) {
    return_value_.no_return_value_ = false;
    clear_has_return_value();
  }
}
inline bool ChannelResponse::no_return_value() const {
  // @@protoc_insertion_point(field_get:exchange.ChannelResponse.no_return_value)
  if (has_no_return_value()) {
    return return_value_.no_return_value_;
  }
  return false;
}
inline void ChannelResponse::set_no_return_value(bool value) {
  if (!has_no_return_value()) {
    clear_return_value();
    set_has_no_return_value();
  }
  return_value_.no_return_value_ = value;
  // @@protoc_insertion_point(field_set:exchange.ChannelResponse.no_return_value)
}

// string assignedID = 7;
inline void ChannelResponse::clear_assignedid() {
  assignedid_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline const ::std::string& ChannelResponse::assignedid() const {
  // @@protoc_insertion_point(field_get:exchange.ChannelResponse.assignedID)
  return assignedid_.GetNoArena();
}
inline void ChannelResponse::set_assignedid(const ::std::string& value) {
  
  assignedid_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value);
  // @@protoc_insertion_point(field_set:exchange.ChannelResponse.assignedID)
}
#if LANG_CXX11
inline void ChannelResponse::set_assignedid(::std::string&& value) {
  
  assignedid_.SetNoArena(
    &::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::move(value));
  // @@protoc_insertion_point(field_set_rvalue:exchange.ChannelResponse.assignedID)
}
#endif
inline void ChannelResponse::set_assignedid(const char* value) {
  GOOGLE_DCHECK(value != NULL);
  
  assignedid_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:exchange.ChannelResponse.assignedID)
}
inline void ChannelResponse::set_assignedid(const char* value, size_t size) {
  
  assignedid_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:exchange.ChannelResponse.assignedID)
}
inline ::std::string* ChannelResponse::mutable_assignedid() {
  
  // @@protoc_insertion_point(field_mutable:exchange.ChannelResponse.assignedID)
  return assignedid_.MutableNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline ::std::string* ChannelResponse::release_assignedid() {
  // @@protoc_insertion_point(field_release:exchange.ChannelResponse.assignedID)
  
  return assignedid_.ReleaseNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline void ChannelResponse::set_allocated_assignedid(::std::string* assignedid) {
  if (assignedid != NULL) {
    
  } else {
    
  }
  assignedid_.SetAllocatedNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), assignedid);
  // @@protoc_insertion_point(field_set_allocated:exchange.ChannelResponse.assignedID)
}

inline bool ChannelResponse::has_return_value() const {
  return return_value_case() != RETURN_VALUE_NOT_SET;
}
inline void ChannelResponse::clear_has_return_value() {
  _oneof_case_[0] = RETURN_VALUE_NOT_SET;
}
inline ChannelResponse::ReturnValueCase ChannelResponse::return_value_case() const {
  return ChannelResponse::ReturnValueCase(_oneof_case_[0]);
}
#ifdef __GNUC__
  #pragma GCC diagnostic pop
#endif  // __GNUC__
// -------------------------------------------------------------------

// -------------------------------------------------------------------

// -------------------------------------------------------------------

// -------------------------------------------------------------------

// -------------------------------------------------------------------


// @@protoc_insertion_point(namespace_scope)

}  // namespace exchange

namespace google {
namespace protobuf {

template <> struct is_proto_enum< ::exchange::Argument_ArgumentType> : ::std::true_type {};
template <>
inline const EnumDescriptor* GetEnumDescriptor< ::exchange::Argument_ArgumentType>() {
  return ::exchange::Argument_ArgumentType_descriptor();
}

}  // namespace protobuf
}  // namespace google

// @@protoc_insertion_point(global_scope)

#endif  // PROTOBUF_INCLUDED_exchange_2eproto
